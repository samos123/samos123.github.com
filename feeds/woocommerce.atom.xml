<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sam Stoelinga - WooCommerce</title><link href="https://samos-it.com/" rel="alternate"></link><link href="https://samos-it.com/feeds/woocommerce.atom.xml" rel="self"></link><id>https://samos-it.com/</id><updated>2023-02-12T21:32:00+01:00</updated><entry><title>Removing sidebar from storefront theme</title><link href="https://samos-it.com/posts/removing-sidebar-storefront-theme.html" rel="alternate"></link><published>2023-02-12T21:32:00+01:00</published><updated>2023-02-12T21:32:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2023-02-12:/posts/removing-sidebar-storefront-theme.html</id><summary type="html">&lt;p&gt;By default, storefront comes with a large sidebar that isn't really
useful for ecommerce websites. This post shows you how to remove the
sidebar by creating a &lt;code&gt;functions.php&lt;/code&gt; file in
your storefront child theme.&lt;/p&gt;
&lt;p&gt;See my previous post on &lt;a href="https://samos-it.com/posts/creating-woocommere-storefront-child-theme.html"&gt;creating a storefront child theme&lt;/a&gt;
if you don't have a …&lt;/p&gt;</summary><content type="html">&lt;p&gt;By default, storefront comes with a large sidebar that isn't really
useful for ecommerce websites. This post shows you how to remove the
sidebar by creating a &lt;code&gt;functions.php&lt;/code&gt; file in
your storefront child theme.&lt;/p&gt;
&lt;p&gt;See my previous post on &lt;a href="https://samos-it.com/posts/creating-woocommere-storefront-child-theme.html"&gt;creating a storefront child theme&lt;/a&gt;
if you don't have a child theme yet.&lt;/p&gt;
&lt;p&gt;Inside your child theme directory, create a file &lt;code&gt;functions.php&lt;/code&gt; that
has the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="nf"&gt;remove_storefront_sidebar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;remove_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;storefront_sidebar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;storefront_get_sidebar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;get_header&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;remove_storefront_sidebar&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;?&amp;gt;&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note if you already have a &lt;code&gt;functions.php&lt;/code&gt; file then simply append the content
above.&lt;/p&gt;
&lt;p&gt;Afterwards, upload your new version of your theme with the updated
&lt;code&gt;functions.php&lt;/code&gt; and you should now see the sidebar removed.&lt;/p&gt;
&lt;p&gt;You might also need to update your &lt;code&gt;style.css&lt;/code&gt; such that the content
is able to utilize the space where the sidebar was before.&lt;/p&gt;</content><category term="WooCommerce"></category><category term="wordpress"></category><category term="woocommerce"></category><category term="storefront"></category><category term="theme"></category></entry><entry><title>Creating a woocommerce storefront child theme</title><link href="https://samos-it.com/posts/creating-woocommere-storefront-child-theme.html" rel="alternate"></link><published>2023-02-11T09:34:00+01:00</published><updated>2023-02-11T09:34:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2023-02-11:/posts/creating-woocommere-storefront-child-theme.html</id><summary type="html">&lt;p&gt;The free storefront theme has a lot of features but it
doesn't look great by default. Luckily, it's quite easy to create a child
theme to make it more attractive. For example, using a child theme
you can remove the sidebar and remove the footer credits.
This blog post will …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The free storefront theme has a lot of features but it
doesn't look great by default. Luckily, it's quite easy to create a child
theme to make it more attractive. For example, using a child theme
you can remove the sidebar and remove the footer credits.
This blog post will guide
you to creating your child them in 2 simple steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating a &lt;code&gt;style.css&lt;/code&gt; file with metadata about the theme&lt;/li&gt;
&lt;li&gt;Packaging and uploading the theme&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Why you should use Wordpress child themes instead of directly editing theme files?&lt;/h2&gt;
&lt;p&gt;Because when you directly edit the theme files, any updates
to the parent theme will overwrite your changes. This means
all your customizations will be lost and you'll have to start
from scratch. But when you use a child theme, your customizations
are kept separate from the parent theme, so updates won't affect them.&lt;/p&gt;
&lt;p&gt;Now that you know why, let's create the child theme&lt;/p&gt;
&lt;h2&gt;1. Creating a new &lt;code&gt;style.css&lt;/code&gt; file with metadata&lt;/h2&gt;
&lt;p&gt;Create a new directory/folder called &lt;code&gt;mychildtheme&lt;/code&gt; and change your working
directory to it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir mychildtheme
&lt;span class="nb"&gt;cd&lt;/span&gt; mychildtheme
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a file &lt;code&gt;style.css&lt;/code&gt; inside the &lt;code&gt;mychildtheme&lt;/code&gt; directory with the following
content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;/* &lt;/span&gt;
&lt;span class="c"&gt;Theme Name: sambal child theme of storefront&lt;/span&gt;
&lt;span class="c"&gt;Version: 1.0 &lt;/span&gt;
&lt;span class="c"&gt;Author: Sam Stoelinga&lt;/span&gt;
&lt;span class="c"&gt;Author URI: https://samos-it.com&lt;/span&gt;
&lt;span class="c"&gt;Template: storefront&lt;/span&gt;
&lt;span class="c"&gt;*/&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;

&lt;span class="c"&gt;/* optional just an example of how you can change the style */&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;product_title&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That's all you need for your child theme to get started. You might wonder, how
does it specify the parent theme? That's done through this line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Template&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;storefront&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It tells Wordpress that the parent theme of our theme is &lt;code&gt;storefront&lt;/code&gt;. You can
view the theme names by listing directories under the &lt;code&gt;wp-content/themes&lt;/code&gt;. In
our case there is a directory called &lt;code&gt;storefront&lt;/code&gt; and that's how it finds the
parent theme.&lt;/p&gt;
&lt;p&gt;For fun, and this is optional, I made all product titles pink. So you can see
how easy it is to add additional CSS rules to storefront this way.&lt;/p&gt;
&lt;h2&gt;2. Upload and activate the child theme&lt;/h2&gt;
&lt;p&gt;There are a few options to upload the child theme to your WooCommerce site:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use FTP to place the &lt;code&gt;mychildtheme&lt;/code&gt; directly in your &lt;code&gt;wp-content/themes&lt;/code&gt;
   directory.&lt;/li&gt;
&lt;li&gt;Create a zip file of the &lt;code&gt;mychildtheme&lt;/code&gt; and uploading the zip file using
   the Wordpress admin UI under &lt;code&gt;/wp-admin/themes.php&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I think the zip file is the most straight forward so that's what we'll use here.&lt;/p&gt;
&lt;p&gt;Create a zip file named &lt;code&gt;mychildtheme.zip&lt;/code&gt; by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;zip -r mychildtheme.zip mychildtheme
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Steps to upload theme as zip:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to the following URL: &lt;code&gt;https://yourwpblog.com/wp-admin/themes.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on "Add Theme" button&lt;/li&gt;
&lt;li&gt;Click on "Upload Theme" button&lt;/li&gt;
&lt;li&gt;Click on "Choose File" button&lt;/li&gt;
&lt;li&gt;Select the zip file &lt;code&gt;mychildtheme.zip&lt;/code&gt; that you created before&lt;/li&gt;
&lt;li&gt;Click on "Install Now" button&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;You should now see your new child theme and be able to preview and activate it.
Notice that any product titles are now pink due to our rule in &lt;code&gt;style.css&lt;/code&gt;.&lt;/p&gt;</content><category term="WooCommerce"></category><category term="wordpress"></category><category term="woocommerce"></category><category term="storefront"></category><category term="theme"></category></entry></feed>