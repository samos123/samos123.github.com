<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sam Stoelinga (Samos IT) - Blog</title><link href="http://samos-it.com/" rel="alternate"></link><link href="http://samos-it.com/feeds/sam-stoelinga.atom.xml" rel="self"></link><id>http://samos-it.com/</id><updated>2015-07-15T16:31:00+02:00</updated><entry><title>Enable SRIOV on OpenStack Juno</title><link href="http://samos-it.com/posts/sriov-openstack-juno-fuel-6-1.html" rel="alternate"></link><updated>2015-07-15T16:31:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2015-07-15:posts/sriov-openstack-juno-fuel-6-1.html</id><summary type="html">&lt;table class="table table-bordered table-hover"&gt;
&lt;caption&gt;Terms used&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th class="col-md-2"&gt;Term&lt;/th&gt;
&lt;th&gt;Definition&lt;/th&gt;
&lt;/tr&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th scope="row"&gt;SRIOV&lt;/th&gt;
&lt;td&gt;Single Root IO Virtualization. SRIOV allows a PCIe device to appear to be multiple separate physical PCIe devices.
&lt;a target="_blank" href="http://blog.scottlowe.org/2009/12/02/what-is-sr-iov/"&gt;What's SRIOV? By Scott Lowe&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;th scope="row"&gt;PF &amp; VF&lt;/th&gt;&lt;td&gt;PF is a physical function. VF is a virtual function. 
A PF is the physical PCI-e network card. A VF is a virtual network card with it's own PCI address.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This post describes how to enable Neutron SRIOV functionality on Mirantis OpenStack Juno
deployed with Fuel 6.1 using Ubuntu 14.04 as host OS. This tutorial assumes you already have deployed OpenStack with
OVS + vlan mode for networking. Next to that for the private interface we have selected
eth3, which serves both as PF for the VFs and also as private vlan trunk for non SRIOV
instances. In our environment we're using the "Intel Corporation 82599" network card which is assigned to eth3.
We will create 7 VFs per PF.&lt;/p&gt;
&lt;p&gt;I have created an ansible playbook to automate the whole process.
You can view this Ansible playbook here: &lt;a href="https://github.com/samos123/fuel-ansible-sriov"&gt;Fuel Ansible SRIOV&lt;/a&gt;
Automated methods are recommended over manual configuring!&lt;/p&gt;
&lt;p&gt;The following steps have to be taken to enable SRIOV manually for reference:
&lt;ol&gt;
&lt;li&gt;Enabling Virtual Functions in the host Operating System&lt;/li&gt;
&lt;li&gt;Whitelist which PCI devices should be used for SRIOV in nova.conf on computes&lt;/li&gt;
&lt;li&gt;Configuring Neutron server for SRIOV&lt;/li&gt;
&lt;li&gt;Enabling the PCIDeviceScheduler in nova-scheduler&lt;/li&gt;
&lt;li&gt;Creating your SRIOV instance&lt;/li&gt;
&lt;/ol&gt;&lt;/p&gt;
&lt;h3&gt;1. Enable Virtual Functions in Host OS&lt;/h3&gt;
&lt;p&gt;First we need to make sure SRIOV is enabled in BIOS, check for VT-d and make sure it's enabled.
After enabling VT-d we also need enable IOMMU on Linux by adding intel_iommu=on to kernel parameters.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vim /etc/default/grub
change &lt;span class="s2"&gt;&amp;quot;GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;&lt;/span&gt;nomdmonddf nomdmonisw&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;to &amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nomdmonddf nomdmonisw intel_iommu=on&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you added new parameters you need to run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;update-grub
reboot
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On each compute node we need to create the VFs via the PCI SYS interface.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;7&amp;#39;&lt;/span&gt; &amp;gt; /sys/class/net/eth3/device/sriov_numvfs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now verify that the VFs have been created correctly&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lspci &lt;span class="p"&gt;|&lt;/span&gt; grep Ethernet
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We just created the VFs for this session. If we would reboot the node these changes would get lost.
So we also add a line to /etc/rc.local to apply these settings on a reboot.
Note: The suggested way of making these settings persistent seems to be through sysfs.conf, but
for some reason it did not work for me hence the rc.local workaround.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;echo &amp;#39;7&amp;#39; &amp;gt; /sys/class/net/eth3/device/sriov_numvfs&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/rc.local
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Verify by rebooting your node that the settings persist.&lt;/p&gt;
&lt;h3&gt;2. Whitelist PCI devices nova.conf on computes&lt;/h3&gt;
&lt;p&gt;In /etc/nova/nova.conf add the line &lt;code&gt;pci_passthrough_whitelist={ "devname": "eth3", "physical_network": "physnet2"}&lt;/code&gt;, this tells nova
that all VFs belonging to eth3 are allowed to be passed through to VMs. Restart nova compute to let the changes have effect
&lt;code&gt;service restart nova-compute&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;3. Configuring Neutron server&lt;/h3&gt;
&lt;p&gt;Add sriovnicswitch to neutron ml2 conf&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &lt;span class="s2"&gt;&amp;quot;s/mechanism_drivers =openvswitch/mechanism_drivers =openvswitch,sriovnicswitch/g&amp;quot;&lt;/span&gt; /etc/neutron/plugins/ml2/ml2_conf.ini
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Find out the vendor_id and product_id of your VFs. Please note this should be the VF not the PF&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lspci -nn &lt;span class="p"&gt;|&lt;/span&gt; grep -i ethernet
87:00.0 Ethernet controller &lt;span class="o"&gt;[&lt;/span&gt;0200&lt;span class="o"&gt;]&lt;/span&gt;: Intel Corporation &lt;span class="m"&gt;82599&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt; Gigabit Dual Port Backplane Connection &lt;span class="o"&gt;[&lt;/span&gt;8086:10f8&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;rev 01&lt;span class="o"&gt;)&lt;/span&gt;
87:10.1 Ethernet controller &lt;span class="o"&gt;[&lt;/span&gt;0200&lt;span class="o"&gt;]&lt;/span&gt;: Intel Corporation &lt;span class="m"&gt;82599&lt;/span&gt; Ethernet Controller Virtual Function &lt;span class="o"&gt;[&lt;/span&gt;8086:10ed&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;rev 01&lt;span class="o"&gt;)&lt;/span&gt;
87:10.3 Ethernet controller &lt;span class="o"&gt;[&lt;/span&gt;0200&lt;span class="o"&gt;]&lt;/span&gt;: Intel Corporation &lt;span class="m"&gt;82599&lt;/span&gt; Ethernet Controller Virtual Function &lt;span class="o"&gt;[&lt;/span&gt;8086:10ed&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;rev 01&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In our case the vendor_id is 8086 and the product_id is 10ed. We need to tell Neutron the vendor_id and product_id of
the VFs that are supported.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &lt;span class="s2"&gt;&amp;quot;s/# supported_pci_vendor_devs.*=.*/supported_pci_vendor_devs = 8086:10ed/g&amp;quot;&lt;/span&gt; /etc/neutron/plugins/ml2/ml2_conf_sriov.ini
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Neutron also has support for running a special sriov-agent which is able set the admin state. I didn't see
any need for setting admin state, so to reduce complexity, we've disabled sriov-agent. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sed -i &lt;span class="s2"&gt;&amp;quot;s/# agent_required =.*/agent_required=false/g&amp;quot;&lt;/span&gt; /etc/neutron/plugins/ml2/ml2_conf_sriov.ini
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We now need to add these new config files as parameter to the neutron-server daemon.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vim /etc/init/neutron-server.conf
change &lt;span class="s2"&gt;&amp;quot;--config-file /etc/neutron/neutron.conf&amp;quot;&lt;/span&gt;
to &lt;span class="s2"&gt;&amp;quot;--config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugin.ini --config-file /etc/neutron/plugins/ml2/ml2_conf_sriov.ini&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Restart neutron-server on every controller&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;service neutron-server restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;4. Enabling the PCIDeviceScheduler in nova-scheduler&lt;/h3&gt;
&lt;p&gt;On every controller node running nova-scheduler we need to add PCIDeviceScheduler to the filters.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;vim /etc/nova/nova.conf
change &lt;span class="s2"&gt;&amp;quot;scheduler_default_filters=DifferentHostFilter,RetryFilter,AvailabilityZoneFilter,RamFilter,CoreFilter,DiskFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter&amp;quot;&lt;/span&gt;

to &lt;span class="s2"&gt;&amp;quot;scheduler_default_filters=DifferentHostFilter,RetryFilter,AvailabilityZoneFilter,RamFilter,CoreFilter,DiskFilter,ComputeFilter,ComputeCapabilitiesFilter,ImagePropertiesFilter,ServerGroupAntiAffinityFilter,ServerGroupAffinityFilter,PciPassthroughFilter&amp;quot;&lt;/span&gt;

also add the following line: &lt;span class="s2"&gt;&amp;quot;scheduler_available_filters=nova.scheduler.filters.pci_passthrough_filter.PciPassthroughFilter&amp;quot;&lt;/span&gt;
below the line: &lt;span class="s2"&gt;&amp;quot;scheduler_available_filters=nova.scheduler.filters.all_filters&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# Restart nova-scheduler&lt;/span&gt;
service nova-scheduler restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;5. Launching an Instance with SRIOV ports&lt;/h3&gt;
&lt;p&gt;After configuring all components we can start trying to launch an instance through the CLI or API.
Horizon currently does not support creating SRIOV instances.&lt;/p&gt;
&lt;p&gt;Get the id of the neutron network where you want the SR-IOV port to be created.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;net_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;neutron net-show net04 &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;\ id\ &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{ print $4 }&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create the SR-IOV port. We specify vnic_type direct, which means that this a SR-IOV port.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;port_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;neutron port-create &lt;span class="nv"&gt;$net_id&lt;/span&gt; --name sriov_port --binding:vnic_type direct &lt;span class="p"&gt;|&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;\ id\ &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{ print $4 }&amp;#39;&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Create the VM specifying that as 1st nic we want to use the previously created sr-iov port.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;nova boot --flavor m1.large --image ubuntu_14.04 --nic port-id&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$port_id&lt;/span&gt; --key-name sam &lt;span class="nb"&gt;test&lt;/span&gt;-sriov
&lt;/pre&gt;&lt;/div&gt;</summary><category term="openstack"></category><category term="networking"></category><category term="sriov"></category><category term="sr-iov"></category><category term="fuel"></category><category term="mirantis openstack"></category></entry><entry><title>Create Linux bridge without losing existing connection</title><link href="http://samos-it.com/posts/create-linux-bridge-without-losing-connection.html" rel="alternate"></link><updated>2015-06-19T14:25:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2015-06-19:posts/create-linux-bridge-without-losing-connection.html</id><summary type="html">&lt;p&gt;The dillemma: You're accessing your server via SSH through interface eth1.102 with the ip 10.20.0.2/24 and gateway 10.20.0.1.
Now you want to add eth1 to a linux bridge so you can hookin VMs on a vlan trunk.&lt;/p&gt;
&lt;p&gt;Solution: Create a script which does everything in 1 go and call this script from screen. Make sure the script is flawless else you still loose your connection.&lt;/p&gt;
&lt;p&gt;This is the script I create-bridge.sh used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# First remove the old vlan device&lt;/span&gt;
ip link &lt;span class="nb"&gt;set &lt;/span&gt;dev eth1.102 down
ip link delete eth1.102


&lt;span class="c"&gt;# Create the bridge &lt;/span&gt;
brctl addbr br-eth1
brctl addif br-eth1 eth1

ip link &lt;span class="nb"&gt;set &lt;/span&gt;eth1 up
ip link &lt;span class="nb"&gt;set &lt;/span&gt;br-eth1 up

&lt;span class="c"&gt;# Add the vlan tagging ontop of the bridge&lt;/span&gt;
vconfig add br-eth1 102

ip link &lt;span class="nb"&gt;set &lt;/span&gt;br-eth1.102 up
ip a add 166.111./24 dev br-eth1.102
ip route add default via 166.111.80.10
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now you should first open a screen session(maybe optional) and then call &lt;code&gt;./create-bridge.sh&lt;/code&gt;, which create your bridge and setup the previous interface ontop of the bridge without losing your SSH connection :)&lt;/p&gt;</summary><category term="linux"></category><category term="networking"></category><category term="bridge"></category></entry><entry><title>Hadoop on demand with Openstack, Cloudinit and Salt</title><link href="http://samos-it.com/posts/hadoop-on-demand-with-openstack-cloudinit-salt.html" rel="alternate"></link><updated>2014-11-27T13:12:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-11-27:posts/hadoop-on-demand-with-openstack-cloudinit-salt.html</id><summary type="html">&lt;p&gt;This post will describe the whole process of providing hadoop on demand
through Openstack, Cloudinit and Saltstack. We will use Openstack
to provision servers on demand, cloudconfig to install salt-master and
salt-minion and saltstack to deploy hadoop namenode and datanodes, all fully
automated. This makes us able to deploy a 5-100+ node (still need to test 20+) Hadoop HDFS
cluster within 5 minutes.&lt;/p&gt;
&lt;h2&gt;Deploy salt-master with Cloudconfig&lt;/h2&gt;
&lt;p&gt;We will install and configure salt-master to
auto_accept key files from the minions. Please note
that this is a security risk.&lt;/p&gt;
&lt;p&gt;Create the following master-cloudconfig file:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#cloud-config&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;apt_mirror&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;http://mirror.bjtu.edu.cn/ubuntu/&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;apt_sources&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ppa:saltstack/salt&amp;quot;&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;packages&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;python-software-properties&lt;/span&gt;
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;salt-master&lt;/span&gt;
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;git&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;runcmd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;bash /tmp/bootstrap-master.sh&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;write_files&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;content&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;#!/bin/bash&lt;/span&gt;
        &lt;span class="no"&gt;sed -i &amp;#39;s/^#auto_accept.*$/auto_accept: True/g&amp;#39; /etc/salt/master&lt;/span&gt;
        &lt;span class="no"&gt;sudo service salt-master restart&lt;/span&gt;
   &lt;span class="l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/tmp/bootstrap-master.sh&lt;/span&gt;
   &lt;span class="l-Scalar-Plain"&gt;permissions&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0755&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now launch openstack instance with: &lt;code&gt;nova boot --image ubuntu_14.04 --user-data master-cloudconfig --flavor m1.medium --key-name sam salt_master&lt;/code&gt;.
The salt-master that we launched in our case has as ip 192.168.111.66. You can ssh to this machine via ssh ubuntu@192.168.111.66&lt;/p&gt;
&lt;h2&gt;Configuring the salt master to deploy a hadoop cluster&lt;/h2&gt;
&lt;p&gt;In order to be able to deploy hadoop on the salt-master we are going to
manually configure the salt-master with the official hadoop formula.
We could also automate this via cloudconfig, but for sake of demonstration
I'm going to list the manual steps here.&lt;/p&gt;
&lt;h3&gt;Configuring salt to use hadoop-formula and it's dependencies&lt;/h3&gt;
&lt;p&gt;We are going to use the following formula: &lt;a href="https://github.com/saltstack-formulas/hadoop-formula"&gt;Hadoop formula&lt;/a&gt;, which
has as dependencies the &lt;a href="https://github.com/saltstack-formulas/hostsfile-formula"&gt;hostsfile-formula&lt;/a&gt; and the
&lt;a href="https://github.com/saltstack-formulas/sun-java-formula"&gt;sun-java-formula&lt;/a&gt;.
The hostsfile formula is to make all nodes accessible by their hostname/fqdn and
the sun-java-formula lets you automatically install java from oracle.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh ubuntu@192.168.111.66 &lt;span class="c"&gt;# SSH into your salt-master&lt;/span&gt;
sudo mkdir /srv/salt
sudo mkdir /srv/salt/formulas
sudo &lt;span class="s2"&gt;&amp;quot;cd /srv/salt/formulas &amp;amp;&amp;amp; &lt;/span&gt;
&lt;span class="s2"&gt;      git clone https://github.com/saltstack-formulas/hadoop-formula&lt;/span&gt;
&lt;span class="s2"&gt;      git clone https://github.com/saltstack-formulas/hostsfile-formula &amp;amp;&amp;amp;&lt;/span&gt;
&lt;span class="s2"&gt;      git clone https://github.com/saltstack-formulas/sun-java-formula&amp;quot;&lt;/span&gt;

cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF &amp;gt; /etc/salt/master.d/file_roots.conf&lt;/span&gt;
&lt;span class="s"&gt;file_roots:&lt;/span&gt;
&lt;span class="s"&gt;  base:&lt;/span&gt;
&lt;span class="s"&gt;    - /srv/salt&lt;/span&gt;
&lt;span class="s"&gt;    - /srv/salt/formulas/hadoop-formula&lt;/span&gt;
&lt;span class="s"&gt;    - /srv/salt/formulas/hostsfile-formula&lt;/span&gt;
&lt;span class="s"&gt;    - /srv/salt/formulas/sun-java-formula&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

cat &lt;span class="s"&gt;&amp;lt;&amp;lt; EOF &amp;gt; /etc/salt/master.d/pillar_roots.conf&lt;/span&gt;
&lt;span class="s"&gt;pillar_roots:&lt;/span&gt;
&lt;span class="s"&gt;  base:&lt;/span&gt;
&lt;span class="s"&gt;    - /srv/pillar&lt;/span&gt;
&lt;span class="s"&gt;EOF&lt;/span&gt;

sudo service salt-master restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Creating SSH keypairs for hadoop-formula&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /srv/salt/formulas/hadoop-formula/hadoop/files &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; ./generate-keypairs.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configuring the top.sls state file to include hadoop and deps&lt;/h3&gt;
&lt;p&gt;On the salt-master create the following file /srv/salt/top.sls:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;base&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;G@roles:hadoop_slave&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;or&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;G@roles:hadoop_master&amp;#39;&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;match&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;compound&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hostsfile&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hostsfile.hostname&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sun-java&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;sun-java.env&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hadoop&lt;/span&gt;
    &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hadoop.hdfs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;By using &lt;a href="http://docs.saltstack.com/en/latest/topics/pillar/"&gt;pillar&lt;/a&gt; we can also change the parameters of hadoop.
You can check all available parameters that are change-able here: 
&lt;a href="https://github.com/saltstack-formulas/hadoop-formula/blob/master/pillar.example"&gt;hadoop-pillar.example&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create the following top.sls pillar file /srv/pillar/top.sls:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;base&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="s"&gt;&amp;#39;G@roles:hadoop_slave&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;or&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;G@roles:hadoop_master&amp;#39;&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
     &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hadoop&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and the following hadoop specific pillar file /srv/pillar/hadoop.sls:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="l-Scalar-Plain"&gt;hadoop&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;version&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;hdp-2.2.0&lt;/span&gt; &lt;span class="c1"&gt;# [&amp;#39;apache-1.2.1&amp;#39;, &amp;#39;apache-2.2.0&amp;#39;, &amp;#39;hdp-1.3.0&amp;#39;, &amp;#39;hdp-2.2.0&amp;#39;, &amp;#39;cdh-4.5.0&amp;#39;, &amp;#39;cdh-4.5.0-mr1&amp;#39;]&lt;/span&gt;
  &lt;span class="l-Scalar-Plain"&gt;users&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;hadoop&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;6000&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;hdfs&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;6001&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Deploy salt-minions as hadoop nodes&lt;/h2&gt;
&lt;p&gt;Now that we have configured our salt-master we can start
deploying the salt-minions which will either server as hadoop-master(namenode)
or as hadoop-slave(datanode).&lt;/p&gt;
&lt;h3&gt;Launching hadoop-master(namenode) nodes&lt;/h3&gt;
&lt;p&gt;First create our cloudconfig file used by openstack hadoopmaster-cloudconfig:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#cloud-config&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;apt_mirror&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://mirror.bjtu.edu.cn/ubuntu/&amp;quot;&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;apt_sources&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ppa:saltstack/salt&amp;quot;&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;packages&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;python-software-properties&lt;/span&gt;
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;salt-minion&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;runcmd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;bash /tmp/bootstrap-minion.sh&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;write_files&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;content&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
         &lt;span class="no"&gt;roles:&lt;/span&gt;
            &lt;span class="no"&gt;- hadoop_master&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/etc/salt/grains&lt;/span&gt;
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;content&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;#!/bin/bash&lt;/span&gt;
        &lt;span class="no"&gt;sed -i &amp;#39;s/^#master.*$/master: 192.168.111.66/g&amp;#39; /etc/salt/minion&lt;/span&gt;
        &lt;span class="no"&gt;sudo service salt-minion restart&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/tmp/bootstrap-minion.sh&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;permissions&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0755&amp;quot;&lt;/span&gt;
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;content&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;mine_functions:&lt;/span&gt;
            &lt;span class="no"&gt;network.interfaces: []&lt;/span&gt;
            &lt;span class="no"&gt;network.ip_addrs: []&lt;/span&gt;
            &lt;span class="no"&gt;grains.items: []&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/etc/salt/minion.d/mine_functions.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then create a new instance using openstack:
&lt;code&gt;nova boot --image ubuntu_14.04 --user-data hadoopmaster-cloudconfig --flavor m1.medium --key-name sam hadoop-master-1&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Deploying hadoop-slave(datanode) nodes&lt;/h3&gt;
&lt;p&gt;Create a hadoopslave-cloudconfig:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;#cloud-config&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;apt_mirror&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://mirror.bjtu.edu.cn/ubuntu/&amp;quot;&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;apt_sources&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;source&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ppa:saltstack/salt&amp;quot;&lt;/span&gt;
&lt;span class="l-Scalar-Plain"&gt;packages&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;python-software-properties&lt;/span&gt;
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;salt-minion&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;runcmd&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
 &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;bash /tmp/bootstrap-minion.sh&lt;/span&gt;

&lt;span class="l-Scalar-Plain"&gt;write_files&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; 
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;content&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
         &lt;span class="no"&gt;roles:&lt;/span&gt;
            &lt;span class="no"&gt;- hadoop_slave&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/etc/salt/grains&lt;/span&gt;
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;content&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;#!/bin/bash&lt;/span&gt;
        &lt;span class="no"&gt;sed -i &amp;#39;s/^#master.*$/master: 192.168.111.66/g&amp;#39; /etc/salt/minion&lt;/span&gt;
        &lt;span class="no"&gt;sudo service salt-minion restart&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/tmp/bootstrap-minion.sh&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;permissions&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;0755&amp;quot;&lt;/span&gt;
  &lt;span class="p-Indicator"&gt;-&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;content&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="p-Indicator"&gt;|&lt;/span&gt;
        &lt;span class="no"&gt;mine_functions:&lt;/span&gt;
            &lt;span class="no"&gt;network.interfaces: []&lt;/span&gt;
            &lt;span class="no"&gt;network.ip_addrs: []&lt;/span&gt;
            &lt;span class="no"&gt;grains.items: []&lt;/span&gt;
    &lt;span class="l-Scalar-Plain"&gt;path&lt;/span&gt;&lt;span class="p-Indicator"&gt;:&lt;/span&gt; &lt;span class="l-Scalar-Plain"&gt;/etc/salt/minion.d/mine_functions.conf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now launch 10 hadoop-slave nodes
&lt;code&gt;nova boot --num-instances 10 --image ubuntu_14.04 --user-data hadoopslave-cloudconfig --flavor m1.medium --key-name sam hadoop-slave&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;Let saltstack deploy hadoop&lt;/h3&gt;
&lt;p&gt;First make sure that the salt-master detected all our hadoop-master and hadoop-slave nodes. Execute the following comand: &lt;code&gt;salt '*' managed.up&lt;/code&gt;
it should show your 11 nodes.&lt;/p&gt;
&lt;p&gt;If all nodes are up and detected you can start deployment of hadoop with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;salt &lt;span class="s1"&gt;&amp;#39;*&amp;#39;&lt;/span&gt; state.highstate
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Accessing the hadoop HDFS cluster&lt;/h2&gt;
&lt;p&gt;After hadoop has been successfully deployed you can go to http://{hadoop_masterip}:50070 and check that
10 live nodes are active.&lt;/p&gt;
&lt;p&gt;Now you can login to any of the nodes and save files to hdfs like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo -u hdfs -i
hadoop fs -mkdir -p /user/hdfs&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="s2"&gt;hadoop fs -put /tmp/bootstrap-minion.sh /user/hdfs/test.sh&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hope this tutorial was useful! &lt;/p&gt;
&lt;p&gt;Notes: You can also configure
&lt;a href="https://github.com/number5/cloud-init/blob/master/doc/examples/cloud-config-salt-minion.txt"&gt;salt-minion directly through cloudconfig&lt;/a&gt; instead.&lt;/p&gt;</summary><category term="openstack"></category><category term="salt"></category><category term="cloudinit"></category><category term="cloudconfig"></category><category term="hadoop"></category><category term="devops"></category></entry><entry><title>Neutron Multiple allocation pools single subnet (Solve Fragmented floating ips problem)</title><link href="http://samos-it.com/posts/neutron-multiple-allocation-pools-single-subnet.html" rel="alternate"></link><updated>2014-11-24T12:01:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-11-24:posts/neutron-multiple-allocation-pools-single-subnet.html</id><summary type="html">&lt;p&gt;In a lab environment in the university I only had access to a list of fragmented
public routable IP addresses in a single subnet. For example I got access to the following ips
50.15.15.10, 55.15.15.12-15, 55.15.15.17. But I am not allowed
to use 55.15.15.11 and 55.15.15.16. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: The Openstack neutron API supports fragmented floating ips but not through the CLI.
You have to use the Python API like below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;neutronclient.neutron&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;

&lt;span class="n"&gt;auth_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;http://192.168.33.11:5000/v2.0&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;basicConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;neutron&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;2.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;password&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tenant_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;demo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;auth_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;auth_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;neutron&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;list_subnets&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;

&lt;span class="n"&gt;req&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;subnet&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;allocation_pools&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;10.0.2.3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;10.0.2.15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;10.0.2.17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;10.0.2.17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;start&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;10.0.2.19&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;end&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;10.0.2.254&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}]}}&lt;/span&gt;

&lt;span class="n"&gt;neutron&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update_subnet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;d5d48930-7bfb-4f0c-8968-13f8af785868&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;Old hacky way:&lt;/h2&gt;
&lt;p&gt;It seems that currently the only way to solve this is to manually change the database
bypassing the API. I used the following SQL insert statements to solve my problem.
This is assuming that 55.15.15.10 is already part of the pool.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;neutron&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;ipallocationpools&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;--------------------------------------+--------------------------------------+----------------+-----------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;id&lt;/span&gt;                                   &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;subnet_id&lt;/span&gt;                            &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;first_ip&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;last_ip&lt;/span&gt;         &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;--------------------------------------+--------------------------------------+----------------+-----------------+&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;78857059&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;658&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4027&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;909&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;b8c6d62e52f&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;c58d4e69&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d614&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;d05&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;91&lt;/span&gt;&lt;span class="n"&gt;e5&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;95&lt;/span&gt;&lt;span class="n"&gt;b5cc48b670&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;    &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;55&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;     &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;c2931835&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;050&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="n"&gt;a0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bfc6&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;dcb833517f6&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;eda970d4&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="n"&gt;c0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4488&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;85&lt;/span&gt;&lt;span class="n"&gt;b2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;d3d0000ebb9&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;  &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;111&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;254&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="c1"&gt;--------------------------------------+--------------------------------------+----------------+-----------------+&lt;/span&gt;

&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;ipallocationpools&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UUID&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;c58d4e69-d614-4d05-91e5-95b5cc48b670&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                      &lt;span class="ss"&gt;&amp;quot;55.15.15.12&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;55.15.15.15&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; 
&lt;span class="k"&gt;insert&lt;/span&gt; &lt;span class="k"&gt;into&lt;/span&gt; &lt;span class="n"&gt;ipallocationpools&lt;/span&gt; &lt;span class="k"&gt;VALUES&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UUID&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;c58d4e69-d614-4d05-91e5-95b5cc48b670&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
                                      &lt;span class="ss"&gt;&amp;quot;55.15.15.17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;&amp;quot;55.15.15.17&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After inserting the ips, the floating ips can be allocated automatically using horizon and be successfuly assigned to
instances. But please note that this is not officially supported and hacky! I haven't seen any
problems as of now, but there probably are some problems with this approach. I just used it
for testing.&lt;/p&gt;
&lt;h3&gt;Side note&lt;/h3&gt;
&lt;p&gt;Previously in nova-network you could easily add single floating ips or smaller ranges within
a subnet. But with neutron the CLI and API's seems to not support this. So after looking at the
code I noticed that the data model in fact supports multiple allocation pools for a single subnet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;IPAllocationPool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BASEV2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HasId&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Representation of an allocation pool in a Neutron subnet.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;subnet_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;subnets.id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                       &lt;span class="n"&gt;ondelete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;CASCADE&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                          &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;first_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;last_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;available_ranges&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;orm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;relationship&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IPAvailabilityRange&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="n"&gt;backref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ipallocationpool&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;joined&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="n"&gt;cascade&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;all, delete-orphan&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Subnet&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;model_base&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;BASEV2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HasId&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;HasTenant&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Represents a neutron subnet.&lt;/span&gt;

&lt;span class="sd"&gt;    When a subnet is created the first and last entries will be created. These&lt;/span&gt;
&lt;span class="sd"&gt;    are used for the IP allocation.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;network_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ForeignKey&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;networks.id&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;ip_version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Integer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;cidr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;nullable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;gateway_ip&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sa&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;allocation_pools&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;orm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;relationship&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;IPAllocationPool&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="n"&gt;backref&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;subnet&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="n"&gt;lazy&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;joined&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                        &lt;span class="n"&gt;cascade&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="openstack"></category><category term="networking"></category><category term="neutron"></category></entry><entry><title>Openstack Networking Study Notes</title><link href="http://samos-it.com/posts/openstack-networking-study-notes.html" rel="alternate"></link><updated>2014-08-29T13:42:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-08-29:posts/openstack-networking-study-notes.html</id><summary type="html">&lt;p&gt;I recommend these links in the following order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://blog.scottlowe.org/2013/05/07/using-gre-tunnels-with-open-vswitch/"&gt;ScottLowe blog: Using GRE tunnels with OpenvSwitch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://blog.scottlowe.org/2013/05/15/examining-open-vswitch-traffic-patterns/"&gt;ScottLowe blog: Examining OpenvSwitch traffic patterns&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hastexo.com/system/files/neutron_packet_flows-notes-handout.pdf"&gt;Hastexto: Neutron Packet Flows (PDF/Presentation)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</summary><category term="openstack"></category><category term="networking"></category><category term="neutron"></category><category term="study"></category></entry><entry><title>Docker get private ip address of container</title><link href="http://samos-it.com/posts/docker-get-private-ip-address-of-container.html" rel="alternate"></link><updated>2014-07-08T14:25:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-07-08:posts/docker-get-private-ip-address-of-container.html</id><summary type="html">&lt;p&gt;In order to access other containers from a container it's needed
to get the private IP address of the other containers. The following
command is able to get the private ip address of the container.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; docker inspect --format&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{{.NetworkSettings.IPAddress}}&amp;quot;&lt;/span&gt; &lt;span class="nv"&gt;$CONTAINER_ID_OR_NAME&lt;/span&gt;
&lt;span class="go"&gt;172.17.0.15&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="docker"></category><category term="container"></category></entry><entry><title>Docker Multiple websites/domains on single ip/host tutorial using a HAproxy as reverse proxy</title><link href="http://samos-it.com/posts/docker-multi-website-single-ip-host-haproxy.html" rel="alternate"></link><updated>2014-07-07T10:15:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-07-07:posts/docker-multi-website-single-ip-host-haproxy.html</id><summary type="html">&lt;p&gt;This post will describe how to expose multiple docker containers
running websites on port 80 using HAproxy as a reverse proxy.
This makes it possible to run multiple websites on different domains
on a single public ip of the host.&lt;/p&gt;
&lt;p&gt;The basic setup is to create 1 container for haproxy which is exposed to
the host on port 80. This HAproxy container will forward the incoming
HTTP request to the correct container based on the domain name.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Reverse haproxy docker diagram" src="/images/haproxy_reverse_proxy_docker.png" /&gt;&lt;br/&gt;
Picture drawn with &lt;a href="http://draw.io" target="_blank"&gt;draw.io&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First launch the containers which run different websites. In our example
we will use a
&lt;a href="https://registry.hub.docker.com/u/tutum/hello-world/"
   target="_blank"&gt;hello-world php demo container&lt;/a&gt;
and a 
&lt;a href="https://registry.hub.docker.com/u/tutum/wordpress/"
   target="_blank"&gt;wordpress site container&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# Run hello world php demo container (test1.domain.com)&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; docker run -d tutum/hello-world
&lt;span class="go"&gt;01ec10276761&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; docker inspect -f &lt;span class="s2"&gt;&amp;quot;{{.NetworkSettings.IPAddress}}&amp;quot;&lt;/span&gt; 01ec10276761
&lt;span class="go"&gt;172.17.0.26&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# Run wordpress container (test2.domain.com)&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; docker run -d tutum/wordpress
&lt;span class="go"&gt;4d23f10f6b35&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; docker inspect -f &lt;span class="s2"&gt;&amp;quot;{{.NetworkSettings.IPAddress}}&amp;quot;&lt;/span&gt; 4d23f10f6b35
&lt;span class="go"&gt;172.17.0.25&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we need to create our haproxy configuration to configure HAproxy as
reverse proxy for our docker containers. Because HAProxy is also running
inside a container we need to be able to access the hello-world and
wordpress container by their private ip accessible from all containers.
We got this IP using the command: &lt;code&gt;docker inspect -f "{{.NetworkSettings.IPAddress}}" $CONTAINERID&lt;/code&gt;.
Make sure to note down these IPs as they will be used in the haproxy.cfg file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# On the host(not container) create directory containing our haproxy config file&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; mkdir ~/haproxy-config

&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# Create ~/haproxy-config/haproxy.cfg&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; vim ~/haproxy-config/haproxy.cfg
&lt;span class="go"&gt;global&lt;/span&gt;
&lt;span class="go"&gt;        log 127.0.0.1   local0&lt;/span&gt;
&lt;span class="go"&gt;        log 127.0.0.1   local1 notice&lt;/span&gt;
&lt;span class="go"&gt;        user haproxy&lt;/span&gt;
&lt;span class="go"&gt;        group haproxy&lt;/span&gt;
&lt;span class="go"&gt;        # daemon&lt;/span&gt;

&lt;span class="go"&gt;defaults&lt;/span&gt;
&lt;span class="go"&gt;        log     global&lt;/span&gt;
&lt;span class="go"&gt;        mode    http&lt;/span&gt;
&lt;span class="go"&gt;        option  httplog&lt;/span&gt;
&lt;span class="go"&gt;        option  dontlognull&lt;/span&gt;
&lt;span class="go"&gt;        option forwardfor&lt;/span&gt;
&lt;span class="go"&gt;        option http-server-close&lt;/span&gt;
&lt;span class="go"&gt;        contimeout 5000&lt;/span&gt;
&lt;span class="go"&gt;        clitimeout 50000&lt;/span&gt;
&lt;span class="go"&gt;        srvtimeout 50000&lt;/span&gt;
&lt;span class="go"&gt;        errorfile 400 /etc/haproxy/errors/400.http&lt;/span&gt;
&lt;span class="go"&gt;        errorfile 403 /etc/haproxy/errors/403.http&lt;/span&gt;
&lt;span class="go"&gt;        errorfile 408 /etc/haproxy/errors/408.http&lt;/span&gt;
&lt;span class="go"&gt;        errorfile 500 /etc/haproxy/errors/500.http&lt;/span&gt;
&lt;span class="go"&gt;        errorfile 502 /etc/haproxy/errors/502.http&lt;/span&gt;
&lt;span class="go"&gt;        errorfile 503 /etc/haproxy/errors/503.http&lt;/span&gt;
&lt;span class="go"&gt;        errorfile 504 /etc/haproxy/errors/504.http&lt;/span&gt;
&lt;span class="go"&gt;        stats enable&lt;/span&gt;
&lt;span class="go"&gt;        stats auth username:password&lt;/span&gt;
&lt;span class="go"&gt;        stats uri /haproxyStats&lt;/span&gt;

&lt;span class="go"&gt;frontend http-in&lt;/span&gt;
&lt;span class="go"&gt;        bind *:80&lt;/span&gt;

&lt;span class="go"&gt;        # Define hosts based on domain names&lt;/span&gt;
&lt;span class="go"&gt;        acl host_test1 hdr(host) -i test1.domain.com&lt;/span&gt;
&lt;span class="go"&gt;        acl host_test2 hdr(host) -i test2.domain.com&lt;/span&gt;

&lt;span class="go"&gt;        ## figure out backend to use based on domainname&lt;/span&gt;
&lt;span class="go"&gt;        use_backend test1 if host_test1&lt;/span&gt;
&lt;span class="go"&gt;        use_backend test2 if host_test2&lt;/span&gt;


&lt;span class="go"&gt;backend test1 # test1.domain.com container&lt;/span&gt;
&lt;span class="go"&gt;    balance roundrobin&lt;/span&gt;
&lt;span class="go"&gt;    option httpclose&lt;/span&gt;
&lt;span class="go"&gt;    option forwardfor&lt;/span&gt;
&lt;span class="go"&gt;    server s2 172.17.0.26:80 # This ip should be the ip of hello-world container&lt;/span&gt;

&lt;span class="go"&gt;backend test2 # test2.domain.com container&lt;/span&gt;
&lt;span class="go"&gt;    balance roundrobin&lt;/span&gt;
&lt;span class="go"&gt;    option httpclose&lt;/span&gt;
&lt;span class="go"&gt;    option forwardfor&lt;/span&gt;
&lt;span class="go"&gt;    server s1 172.17.0.26:80 # This ip should be ip of wordpress container&lt;/span&gt;

&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# Run haproxy and map the host directory ~/haproxy-config to /haproxy-override of the container&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# See the image README and Dockerfile for info about this override behaviour.&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# HAProxy is exposed on port 80 because all requests to the public ip should&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; &lt;span class="c"&gt;# go to the HAProxy container.&lt;/span&gt;
&lt;span class="gp"&gt;$&lt;/span&gt; docker run -d -p 80:80 -v ~/haproxy-config:/haproxy-override dockerfile/haproxy
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The HAProxy configuration could be automated possibly with the use of etcd to store
information about services or use a similar method to
&lt;a href="http://jasonwilder.com/blog/2014/03/25/automated-nginx-reverse-proxy-for-docker/"
   target="_blank"&gt;Automated nginx reverse proxy for docker&lt;/a&gt;. The automated nginx reverse
proxy didn't work for me though.&lt;/p&gt;
&lt;p&gt;Thanks to
&lt;a href="http://oskarhane.com/haproxy-as-a-static-reverse-proxy-for-docker-containers/"
   target="_blank"&gt;HAProxy as static reverse proxy for docker containers&lt;/a&gt; for the
haproxy config file. Although I think it's better to run HAproxy in a container.&lt;/p&gt;</summary><category term="linux"></category><category term="docker"></category><category term="container"></category></entry><entry><title>Move first word to end of line (Linux/awk)</title><link href="http://samos-it.com/posts/move-first-word-to-end-of-line-linux-awk.html" rel="alternate"></link><updated>2014-06-08T20:29:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-06-08:posts/move-first-word-to-end-of-line-linux-awk.html</id><summary type="html">&lt;p&gt;Move the first word of a line to the end of line on Linux using AWK.
We first store the first column(first word) in the variable t. Then
we set the first column to be empty. At last we add a new column
after the last column of the line which is stored in $NF.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; move_to_end  should stay at the same place&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;NF+1&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;t&lt;span class="o"&gt;}&lt;/span&gt;1
should stay at the same place move_to_end
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The idea was from a stackoverflow question which I can't find anymore.&lt;/p&gt;</summary></entry><entry><title>SSH to server behind a firewall via an SSH tunnel</title><link href="http://samos-it.com/posts/ssh-to-server-behind-firewall-via-ssh-tunnel.html" rel="alternate"></link><updated>2014-05-10T00:00:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-05-10:posts/ssh-to-server-behind-firewall-via-ssh-tunnel.html</id><summary type="html">&lt;p&gt;A server behind a firewall was unaccesible from my home,
but another server which is on the same local network had
public SSH access from my home. So we can create an SSH tunnel
via this public server to the server behind a firewall.&lt;/p&gt;
&lt;p&gt;For example the public ssh server is 8.8.8.8 and the
server on the private network that we want to access is 192.168.1.5. Then we
can create an SSH tunnel from my laptop at home in the
following way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh root@8.8.8.8 -L 2020:192.168.1.5:22
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The above command creates an SSH tunnel, where the
local port 2020 on my laptop will be forwarded to port
22 of the private server behind the firewall.&lt;/p&gt;
&lt;p&gt;After the tunnel is created  you can use the following command
to directly SSH from your home laptop to the private server
with ip 192.168.1.5:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ssh ubuntu@localhost -p 2020
&lt;/pre&gt;&lt;/div&gt;</summary><category term="linux"></category><category term="ssh"></category><category term="firewall"></category><category term="tunnel"></category></entry><entry><title>Recursive karatsuba multiplication in Python</title><link href="http://samos-it.com/posts/recursive-karatsuba-multiplication-python.html" rel="alternate"></link><updated>2014-05-04T00:00:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2014-05-04:posts/recursive-karatsuba-multiplication-python.html</id><summary type="html">&lt;p&gt;I'm currently taking the class Algorithm: Design and Analysis of Stanford via Coursera and
in the class the Karatsuba algorithm got mentioned. I went ahead and implemented it based
on the lecture slides.&lt;/p&gt;
&lt;p&gt;The Karatsuba algorithm is a fast multiplication algorithm. It's special because
it was the first multiplication algorithm to be faster than the quadratic "grade school"
algorithm. &lt;a href="https://en.wikipedia.org/wiki/Karatsuba_algorithm"&gt;Karatsuba algorithm - Wikipedia&lt;/a&gt;
It also has a funny history, see the history at the Wikipedia article.&lt;/p&gt;
&lt;p&gt;My Python implementation using a Divide and Conquer approach:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;math&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;ceil&lt;/span&gt;

&lt;span class="n"&gt;memory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;28&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;35&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;49&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;24&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;48&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;56&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;36&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;45&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;54&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;63&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;72&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;81&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
          &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;60&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;90&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot; Recursive multiplication using karatsuba&lt;/span&gt;
&lt;span class="sd"&gt;    x = 10^n/2 * a + b&lt;/span&gt;
&lt;span class="sd"&gt;    y = 10^n/2 * c + d&lt;/span&gt;
&lt;span class="sd"&gt;    x * y = 10^n * ac + 10^(n/2) (ad+bc) + bd&lt;/span&gt;
&lt;span class="sd"&gt;    where (ad+bc) = (a+b)(c+d) - ac - bd&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;str_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;str_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_x&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="c"&gt;# Just for fun to not use any multiplications haha&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;memory&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

    &lt;span class="n"&gt;str_x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prepend_zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;str_y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;prepend_zeros&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;n_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

    &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_x&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;n_2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_x&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n_2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_y&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;n_2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_y&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;n_2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;ac&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;bd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ad_bc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;ac&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;bd&lt;/span&gt;

    &lt;span class="c"&gt;# for supporting edge case where n is not a multiple of 2&lt;/span&gt;
    &lt;span class="n"&gt;n_2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ceil&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ac&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;n_2&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;ad_bc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;bd&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I also created a testcase to test whether my implementation is correct:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MultiplicationTestCase&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;unittest&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;TestCase&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_small_numbers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_different_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_different_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;103&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3097&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;318991&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_two_digits1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;2500&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_two_digits2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;21&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;399&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_three_digits1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;500&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;250000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_three_digits2&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;223&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;321&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;71583&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_four_digits1&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1234&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4321&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="mi"&gt;5332114&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_seven_digits&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5000000&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                         &lt;span class="mi"&gt;25000000000000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;test_random_cases&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;randint&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;100000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;expected&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
            &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;assertEqual&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;karatsuba&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Failed with x: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; and y: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;. &amp;quot;&lt;/span&gt;
                             &lt;span class="s"&gt;&amp;quot;Expected: &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt; but got &lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; 
                             &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="coding"></category><category term="programming"></category><category term="python"></category><category term="algorithms"></category></entry><entry><title>Using nested tmux over ssh and how to detach a nested tmux</title><link href="http://samos-it.com/posts/using-nested-tmux-over-ssh-and-how-to-detach-a-nested-tmux.html" rel="alternate"></link><updated>2013-08-15T02:08:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2013-08-15:posts/using-nested-tmux-over-ssh-and-how-to-detach-a-nested-tmux.html</id><summary type="html">&lt;p&gt;Today I logged in to my laptop at home from work which was already
running a tmux session, so thought yea just attach cool can continue
with what I was looking at at home. I forgot that the keys would be the
same ofcourse, and was unable to use the tmux session at my laptop at
home. Whenever I would type Ctrl + B + n etc it would do that on my work
desktop which was also running tmux. I was lolling oh damn how to get
out of that laptops tmux session.&lt;/p&gt;
&lt;p&gt;Google to the rescue. Here is the solution:&lt;/p&gt;
&lt;p&gt;If you want to access the tmux session inside the ssh session so in my
example on my laptop, you have to just use Ctrl + b + Ctrl + b&lt;/p&gt;
&lt;p&gt;So if you want to detach the nested tmux session you have to execute the
following: (Ctrl + b) + (Ctrl + b) + d.&lt;/p&gt;
&lt;p&gt;(Resource: &lt;a href="http://fizbancyr.wordpress.com/2012/05/31/tmux-tips/"&gt;Tmux
Tips&lt;/a&gt;)&lt;/p&gt;</summary></entry><entry><title>Remove/detach a PCI device linux (kvm VGA passthrgough Nvidia Quadro 2000)</title><link href="http://samos-it.com/posts/removedetach-a-pci-device-linux-kvm-vga-passthrgough-nvidia-quadro-2000.html" rel="alternate"></link><updated>2013-06-09T08:55:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2013-06-09:posts/removedetach-a-pci-device-linux-kvm-vga-passthrgough-nvidia-quadro-2000.html</id><summary type="html">&lt;p&gt;&lt;strong&gt;Answer:&lt;/strong&gt;  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; -n &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &amp;gt; /sys/bus/pci/devices/0000:02:00.0/remove
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Where 0000:02:00.0 is related to your pci device address which can
be obtained from the command &lt;code&gt;lspci&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Related story:&lt;/strong&gt;&lt;br /&gt;
Was working on KVM vga passthrough and encountered problems with the
graphics card nvidia Quadro 2000.&lt;/p&gt;
&lt;p&gt;This was the error I got when attaching this particular VGA card:&lt;br /&gt;
libvirtError: internal error Unable to reset PCI device 0000:83:00.0:
internal error Active 0000:83:00.1 devices on bus with 0000:83:00.0, not
doing bus reset&lt;/p&gt;
&lt;p&gt;After investigating I noticed that 0000:83:00.1 is a Sound compatible
controller on the video card. Tried lots of stuff such as disable the
drivers of that sound compatbile controller but without much success.&lt;/p&gt;
&lt;p&gt;So in the end I decided I should just remove the pci device, but
couldn't find how to do it, so just tried some stuff and this is what I
came up with. I have no idea if it will break your system or what it
does exactly, but after removing the sound compatbile controller I was
able to pass the nvidia Quadro 2000 card to my virtual machine :)&lt;/p&gt;
&lt;p&gt;Here is the code to remove the pci device using a simple linux command:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;lspci -k | grep NVID -C3  
00:83.0 VGA compatible controller: Nvidia Quadro 2000.... (Dont have
the card anymore)  
00:83.1 Sound device: Nvidia Quadro Audo captabiel balbalbal. 2000 GP  
echo -n &amp;quot;1&amp;quot; &amp;gt; /sys/bus/pci/devices/0000:02:00.1/remove
&lt;/pre&gt;&lt;/div&gt;</summary></entry><entry><title>Install PyQt in a virtualenv with Pip</title><link href="http://samos-it.com/posts/install-pyqt-in-a-virtualenv-with-pip.html" rel="alternate"></link><updated>2013-05-30T15:48:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2013-05-30:posts/install-pyqt-in-a-virtualenv-with-pip.html</id><summary type="html">&lt;p&gt;Noticed that pip install pyqt isn't working? At least at the time of
writing this blog it isn't..&lt;/p&gt;
&lt;p&gt;This is the error that I got:&lt;br /&gt;
IOError: [Errno 2] No such file or directory: setup.py&lt;/p&gt;
&lt;p&gt;It seems they didn't package it well and it's using configure.py to
install. So here is the solution to install it by using pip to download
the files and configure and install manually.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution&lt;/strong&gt; copied from: &lt;a href="http://stackoverflow.com/a/13967084/376445"&gt;http://stackoverflow.com/a/13967084/376445&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;workon myProject  
pip install --no-install SIP  
pip install --no-install PyQt  
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.virtualenvs/myProject/build/SIP  
python configure.py  
make  
make install  
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.virtualenvs/myProject/build/PyQt  
python configure.py  
make  
make install  
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; rm -rf ~/.virtualenvs/myProject/build &lt;span class="c"&gt;# Optional.&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;Issues I encountered&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Missing development headers for qt: &lt;div class="highlight"&gt;&lt;pre&gt;~/.virtualenvs/scrapy/build/PyQt# python configure.py --verbose  
Determining the layout of your Qt installation...  
/usr/bin/qmake -o qtdirs.mk qtdirs.pro  
make -f qtdirs.mk 
g++ -c -m64 -pipe -O2 -Wall -W -D_REENTRANT -DQT_NO_DEBUG
-DQT_CORE_LIB -I/usr/share/qt4/mkspecs/linux-g++-64 -I.
-I/usr/includ e/qt4/QtCore -I/usr/include/qt4 -I. -o qtdirs.o qtdirs.cpp  
qtdirs.cpp:1:28: fatal error: QCoreApplication: No such file or directory compilation terminated.  
make: *** &lt;span class="o"&gt;[&lt;/span&gt;qtdirs.o&lt;span class="o"&gt;]&lt;/span&gt; Error &lt;span class="m"&gt;1&lt;/span&gt;  
Error: Failed to determine the layout of your Qt installation. Try again using  the --verbose flag to see more detail about the problem.
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Soltution:&lt;/strong&gt; Install the development headers (Ubuntu 12.04)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install libqt4-dev
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="pyqt"></category><category term="pip"></category></entry><entry><title>Ignoring every channels join/part/quit messages in IRSSI</title><link href="http://samos-it.com/posts/ignoring-every-channels-joinpartquit-messages-in-irssi.html" rel="alternate"></link><updated>2013-05-11T02:00:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2013-05-11:posts/ignoring-every-channels-joinpartquit-messages-in-irssi.html</id><summary type="html">&lt;p&gt;Tired of all those join part messages?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;/ignore &lt;span class="se"&gt;\*&lt;/span&gt; joins  
/ignore &lt;span class="se"&gt;\*&lt;/span&gt; parts  
/ignore &lt;span class="se"&gt;\*&lt;/span&gt; quits  
/save
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Read more about ignore &lt;code&gt;/help ignore&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Taken from Archwiki:
&lt;a href="https://wiki.archlinux.org/index.php/Irssi"&gt;https://wiki.archlinux.org/index.php/Irssi&lt;/a&gt;&lt;/p&gt;</summary><category term="irssi"></category><category term="linux"></category></entry><entry><title>Create tar archive of changed/added files in a git commit</title><link href="http://samos-it.com/posts/create-tar-archive-of-changedadded-files-in-a-git-commit.html" rel="alternate"></link><updated>2013-05-02T02:12:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2013-05-02:posts/create-tar-archive-of-changedadded-files-in-a-git-commit.html</id><summary type="html">&lt;p&gt;The following command first gets the changed and added files of a git
commit and then creates a tar archive of those changed files.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git show &lt;span class="o"&gt;{{&lt;/span&gt;COMMIT_ID&lt;span class="o"&gt;}}&lt;/span&gt; --name-status &lt;span class="p"&gt;|&lt;/span&gt; grep -Ew &lt;span class="s1"&gt;&amp;#39;^M|A&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; awk &lt;span class="s1"&gt;&amp;#39;{ print $2 }&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; xargs tar czf usb-passthrough.tar.gz
&lt;/pre&gt;&lt;/div&gt;</summary><category term="git"></category><category term="linux"></category><category term="shell"></category><category term="bash"></category></entry><entry><title>Full migration/clone of linux installation to a new system(Without reinstalling)</title><link href="http://samos-it.com/posts/full-migration-of-archlinux-installation-to-a-new-system.html" rel="alternate"></link><updated>2012-11-14T13:26:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2012-11-14:posts/full-migration-of-archlinux-installation-to-a-new-system.html</id><summary type="html">&lt;p&gt;I'm switching to a new laptop, but don't want to have to install
Archlinux again. So instead of re-installing I will try to copy all
files and hope the system will work. In this blogpost I will describe
the steps and issues I encountered while doing so.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Status: Succeeded!!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Summary of the plan&lt;/strong&gt;: Boot from a live usb on the new system, create
partitions with gparted, copy all the files over, change /etc/fstab to
partition uuids, regenerate the mkinitcpio stuff (Still should read what
this actually is).&lt;/p&gt;
&lt;p&gt;On the new laptop following steps should be done:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Boot from a Ubuntu live cd and start gparted&lt;/li&gt;
&lt;li&gt;Create a / partition (ext4)&lt;/li&gt;
&lt;li&gt;Create a /home parition (ext4)&lt;/li&gt;
&lt;li&gt;Create a /boot partition (ext2)&lt;/li&gt;
&lt;li&gt;Mount the newly created partitions under /mnt/&lt;/li&gt;
&lt;li&gt;Copy all files of the old laptop / /home to new laptop /mnt/ /mnt/home using rsync&lt;/li&gt;
&lt;li&gt;Chroot into the copied files on the new laptop&lt;/li&gt;
&lt;li&gt;Change the /etc/fstab to point to the new partition UUIDs&lt;/li&gt;
&lt;li&gt;Install grub on new harddrive and reconfigure Grub&lt;/li&gt;
&lt;li&gt;Recreate the ramdisk&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Environment:&lt;/h2&gt;
&lt;p&gt;Old Laptop:&lt;br /&gt;
Archlinux 64 bits, 8GB memory, AMD CPU and ATI card&lt;br /&gt;
IP: 192.168.1.108&lt;br /&gt;
Connected to router via internet cable, WIFI was way too slow to copy files&lt;/p&gt;
&lt;p&gt;New laptop:
Intel CPU and nvidia video card&lt;br /&gt;
IP: 192.168.1.111&lt;/p&gt;
&lt;h2&gt;Detailed steps:&lt;/h2&gt;
&lt;p&gt;Boot from a live ubuntu USB on the new laptop and do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Use gparted or fdisk to create the following partitions:
   /dev/sda1 filesystem: ext2 size: 512mb label: boot (100mb is needed, but had enough space will become /boot)
   /dev/sda2 filesystem: ext4 size: 30gb label: root(will become root /)
   /dev/sda3 filesystem: ext4 size: 180gb label: home(will become home /home)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After you have created the partitions successfully, mount all partitions to /mnt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mount /dev/sda2 /mnt
mkdir /mnt/boot
mount /dev/sda1 /mnt/boot
mkdir /mnt/home
mount /dev/sda3 /mnt/home
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Now go back to the old Archlinux laptop and copy all files to the newly created partitions:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rsync -azv --progress --exclude&lt;span class="o"&gt;=&lt;/span&gt;/dev --exclude&lt;span class="o"&gt;=&lt;/span&gt;/sys / root@192.168.1.111:/mnt/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This may take a while..................&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After everything is copied over to the new laptop, we will have to
change /etc/fstab to look as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;tmpfs /tmp tmpfs nodev,nosuid &lt;span class="m"&gt;0&lt;/span&gt; 0
&lt;span class="nv"&gt;LABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;root / ext4 defaults,noatime &lt;span class="m"&gt;0&lt;/span&gt; 1
&lt;span class="nv"&gt;LABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;home /home ext4 defaults,noatime &lt;span class="m"&gt;0&lt;/span&gt; 2
&lt;span class="nv"&gt;LABEL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;boot /boot ext2 defaults,noatime &lt;span class="m"&gt;0&lt;/span&gt; 2
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then reinstall Grub on the hard drive:&lt;br /&gt;
&lt;code&gt;grub-install --force --target=i386-pc --recheck --debug /dev/sda&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Why the --force?
I encountered the following error: will not proceed with 
blocklists archlinux so after reading the wiki it said I could fix this by using --force.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Regenerate grub config:&lt;br /&gt;
&lt;code&gt;grub-mkconfig -o /boot/grub/grub.cfg&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Regenerate initial ramdisk:&lt;br /&gt;
&lt;code&gt;mkinitcpio -p linux&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Reboot the system&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I also had to update my modules.d/xxx to not load some specific AMD modules for laptop-mode tools as the new laptop has an intel processor.
Also has to remove the ati driver and change to intel open source
driver:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;yaourt -Rs xf86-video-ati
yaourt -S xf86-video-nouveau
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The reason I am switching: My current HP 625 laptop has served its
purpose for nearly 2 years. The CPU seems to be nearly burnt out, when I
opened the laptop few days ago, the CPU was totally black, but still
working.&lt;/p&gt;
&lt;p&gt;References I used:
Archlinux wiki: Migrate installation to new
hardware https://wiki.archlinux.org/index.php/Migrate_installation_to_new_hardware
Forum post which basically does the same
thing https://bbs.archlinux.org/viewtopic.php?id=145025&lt;/p&gt;</summary><category term="archlinux"></category><category term="geek"></category><category term="linux"></category><category term="migration"></category></entry><entry><title>Only use worker when required on heroku with Django/Python</title><link href="http://samos-it.com/posts/only-use-worker-when-required-on-heroku-with-djangopython.html" rel="alternate"></link><updated>2012-04-13T09:42:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2012-04-13:posts/only-use-worker-when-required-on-heroku-with-djangopython.html</id><summary type="html">&lt;p&gt;For a mobile project I required a background worker which sents an email
with 300 generated QR codes zipped together as attachment. This costs
quite some time so we need a background worker to execute this task.&lt;/p&gt;
&lt;p&gt;I wanted to achieve the following result:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When the user wants to generate qr codes, Start the celery worker
    process with scale(1)&lt;/li&gt;
&lt;li&gt;Delay the celery task to be executed by the celeryworker&lt;/li&gt;
&lt;li&gt;After our task is finished, stop the celeryworker with scale(0)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why I want this? Well workers costs quite some money if they are running
constantly, which is in our case maybe only 1 hour a month. Saving us
about \$30 / month.&lt;/p&gt;
&lt;p&gt;For more information about how to run a worker check the &lt;a href="https://devcenter.heroku.com/articles/django#running_a_worker"&gt;Official
Heroku Django
documentation&lt;/a&gt;,
which shows you how to setup Django with celery. Here you can find how
to create the task itself in celery: &lt;a href="http://ask.github.com/django-celery/getting-started/index.html"&gt;Django-celery
tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To talk with the Heroku REST API we are using
&lt;a href="https://github.com/heroku/heroku.py"&gt;Heroku.py&lt;/a&gt;. This API let's us
scale and stop / start proccesses with Python. The official
documentation tells to do it this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;heroku&lt;/span&gt;  
&lt;span class="n"&gt;cloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;heroku&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HEROKU_APIKEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;celeryd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
&lt;span class="c"&gt;# now execute our celerytask  &lt;/span&gt;
&lt;span class="n"&gt;generate_qr_codes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;delay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;product&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The only problem is that this line actually does not work:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;processes&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;celeryd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It will give an KeyError exception, because the celeryd is not running
which is kind of a bug, thats why I want to scale it to 1 in the first
place...&lt;/p&gt;
&lt;p&gt;So I got stuck on that problem, but after checking out the Heroku
Python library I decided to use their internal API as they have an easy way of
calling Heroku HTTP resources. It's a quick work around to do what I
wanted:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;cloud&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_http_resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                    &lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;heroku_processname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;scale&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;  
&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;celeryd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;qty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="c"&gt;# qty 0 is scale to 0 processes, if you want 1 process running change to qty 1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I have created an issue in the github repo about not being able to scale
a non running process: &lt;a href="https://github.com/heroku/heroku.py/issues/10"&gt;https://github.com/heroku/heroku.py/issues/10&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is how our celery task looks like:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;logging&lt;/span&gt;  
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;celery.decorators&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;task&lt;/span&gt;

&lt;span class="nd"&gt;@task&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;  
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;generate_qrs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;product_id&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
        &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;product_id&lt;/span&gt;  
        &lt;span class="c"&gt;# this is where your code will be that gets executed in the background  &lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
        &lt;span class="n"&gt;logging&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exception&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Exception occured in the celery task to generate QR codes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEBUG&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;heroku&lt;/span&gt;
        &lt;span class="n"&gt;cloud&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;heroku&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;HEROKU_APIKEY&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;cloud&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;appname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  
        &lt;span class="n"&gt;cloud&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_http_resource&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;resource&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;heroku_processname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;ps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;scale&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                             &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;celeryd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;qty&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="c"&gt;# the above line will stop the celeryd worker, so we dont have to pay&lt;/span&gt;
        &lt;span class="c"&gt;# for the woker only when it&amp;#39;s actually executing tasks&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="coding"></category><category term="python"></category><category term="django"></category><category term="heroku"></category></entry><entry><title>Using Sendgrid with Django on Heroku (How to find your Sendgrid password on Heroku)</title><link href="http://samos-it.com/posts/using-sendgrid-with-django-on-heroku-how-to-find-your-sendgrid-password-on-heroku.html" rel="alternate"></link><updated>2012-04-11T09:43:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2012-04-11:posts/using-sendgrid-with-django-on-heroku-how-to-find-your-sendgrid-password-on-heroku.html</id><summary type="html">&lt;p&gt;While setting up sentgrid I was searching for my password of sendgrid,
but coudn't find it. You can get it in the following way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;heroku config --long
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Which will show the parameters:&lt;br /&gt;
SENDGRID_PASSWORD, SENDGRID_USERNAME&lt;/p&gt;
&lt;p&gt;After you get your username don't forget to add it to django settings:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;EMAIL\_HOST = &amp;#39;smtp.sendgrid.net&amp;#39;  
EMAIL\_HOST\_USER = &amp;#39;app11111111@heroku.com&amp;#39;  
EMAIL\_HOST\_PASSWORD = &amp;#39;thepassyougotbefore&amp;#39;  
EMAIL\_PORT = 587  
EMAIL\_USE\_TLS = True
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Hope it helped somebody&lt;/p&gt;</summary></entry><entry><title>Django Custom View Decorator with Arguments</title><link href="http://samos-it.com/posts/django-custom-view-decorator-with-arguments.html" rel="alternate"></link><updated>2012-02-23T17:52:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2012-02-23:posts/django-custom-view-decorator-with-arguments.html</id><summary type="html">&lt;p&gt;To make my life easier I made a simple decorator which checks if the
parameters are present in the request.POST or request.GET and returns a
response if they are not.&lt;/p&gt;
&lt;p&gt;It accepts a list of parameters in string format and will loop through
each parameter to check if they are present in the request.POST.&lt;/p&gt;
&lt;p&gt;I noticed there weren't a lot of guides about how to write a decorator
for Django which takes arguments. I based my code on this tutorial, it's
a really great guide which helps you understand Python decorators at a
new level: &lt;a href="http://www.elfsternberg.com/2009/11/20/python-decorators-with-arguments-with-bonus-django-goodness/" title="Amazing insight about Python decorators"&gt;Amazing insight about Python
decorators&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here is the code I wrote for the decorator:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;required_parameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;api_key&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;http_method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
    &lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;  &lt;/span&gt;
&lt;span class="sd"&gt;    Check if the required parameters are present in the request  &lt;/span&gt;
&lt;span class="sd"&gt;    @param parameters: The names of the parameters that should be supplied  &lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;  
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;inner_decorator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
        &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;wrapped&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
            &lt;span class="c"&gt;# check if the user api_key matches  &lt;/span&gt;
            &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;parameter&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;parameter&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;http_method&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json_response&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;errors&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Please use the Web API correctly and supply the parameter: &amp;#39;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;parameter&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;  
            &lt;span class="c"&gt;# Proceed like normally with the request  &lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fn&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;wrapped&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inner_decorator&lt;/span&gt;  
    &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;python&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;An example of using it in your view:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nd"&gt;@required_parameters&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parameters&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;username&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;view_which_requires_email_username_and_password&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  
    &lt;span class="n"&gt;bla&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;bla&amp;#39;&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;bla&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="django"></category><category term="python"></category><category term="coding"></category><category term="decorators"></category></entry><entry><title>Simple function to return json in Django</title><link href="http://samos-it.com/posts/simple-function-to-return-json-in-django.html" rel="alternate"></link><updated>2012-02-22T15:53:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2012-02-22:posts/simple-function-to-return-json-in-django.html</id><summary type="html">&lt;p&gt;Just a small code snippet I use when I need to return json, comments are
welcomed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.http&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;  
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;django.utils&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;simplejson&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;json_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dict_to_convert_to_json&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;HttpResponse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dict_to_convert_to_json&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
                        &lt;span class="n"&gt;mimetype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To use it in your view you just do it this way:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;login&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;  
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json_response&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;success&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;user&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Sam&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                                      &lt;span class="s"&gt;&amp;#39;speciality&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Django/Python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}})&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You could also create a decorator to do this but I think using a simple function
is more straight forward.&lt;/p&gt;</summary><category term="python"></category><category term="django"></category><category term="json"></category></entry><entry><title>Chinese New Year 2012</title><link href="http://samos-it.com/posts/chinese-new-year-2012.html" rel="alternate"></link><updated>2012-01-22T03:24:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2012-01-22:posts/chinese-new-year-2012.html</id><summary type="html">&lt;p&gt;The Chinese New Year aka Spring Festival is the most important festival
in Chinese culture. All the people travel back to their hometown,
because most of them are working/studying in cities far from their own
hometown. That means all train tickets are sold the day they get
available and plane tickets are super expensive. Luckily Marry was able
to order train tickets via her university, so we didn't have to go
through the hardship of having to buy the tickets ourself. But there was
a little problem with this solution as the tickets will be on somebody's
passport, because I she cant order them on my name because I'm not a
student on her uni.&lt;/p&gt;
&lt;p&gt;So the 18th we took the train, I was really nervous as I also did not
have my passport and the train ticket not being on my name. My passport
is being hold for extending my visa, and they lately required everybody
to show their passport, else you wouldn't be able to enter the train
station. But everything went fine in the end, the first security check I
just pretended I didn't understand and then they smiled and let me
through. After that they only checked the tickets so it was ok.&lt;/p&gt;
&lt;p&gt;The train trip itself was pretty decent, could watch outside and there
weren't as many people as I expected. I heard horror stories about not
being able to move at all in the train. It was hard but not impossible, as
people were standing / sitting on the ground because they didn't have a seat.
We were sitting together with students from Marrys uni, so we talked
with them the whole trip, was pretty fun. Time went quite fast and even
managed to sleep for 5 hours.&lt;/p&gt;
&lt;p&gt;Here in Fuzhou I'm mostly still working so didn't have time to go to
many places yet. Yesterday went to the country side to celebrate new
years with hotpot, a big meal and visited some relatives. The country
side was quite amazing they had small roads and all houses are different
as most of them build the houses them self. Also went to walk around a
little and found a nice castle and river. Will go there again in the
evening.&lt;/p&gt;
&lt;p&gt;My overal impression of Fuzhou is pretty good, I like the atmosphere
and the traffic is much better than Beijing. There are also palm trees and
many tropical trees, which I like.&lt;/p&gt;</summary></entry><entry><title>Importing a SQL dump in postgres</title><link href="http://samos-it.com/posts/importing-a-sql-dump-in-postgres.html" rel="alternate"></link><updated>2011-11-29T13:46:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-11-29:posts/importing-a-sql-dump-in-postgres.html</id><summary type="html">&lt;p&gt;I always keep forgetting how to import a SQL dump into postgres and
found it always hard to find the right documentation. So I thought lets
share it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;psql -d dbname -U username -f dumpfile.sql
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This should also work with files created by pgdump.&lt;/p&gt;</summary></entry><entry><title>Installing fastboot for Ubuntu (Linux)</title><link href="http://samos-it.com/posts/installing-fastboot-for-ubuntu-linux.html" rel="alternate"></link><updated>2011-11-22T14:11:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-11-22:posts/installing-fastboot-for-ubuntu-linux.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;mkdir ~/fastboot  
&lt;span class="nb"&gt;cd&lt;/span&gt; ~/fastboot  
wget http://xt720.ru/Tools/fastboot  
chmod +x fastboot  
sudo ./fastboot --help
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Reference: &lt;a href="http://forum.xda-developers.com/showthread.php?t=1121420"&gt;http://forum.xda-developers.com/showthread.php?t=1121420&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I tested the above with Ubuntu 11.10, but it should work on any ubuntu
version I think.&lt;/p&gt;</summary></entry><entry><title>Trying to install scrapy with pip lxml error: command 'gcc' failed with exit status 1</title><link href="http://samos-it.com/posts/trying-to-install-scrapy-with-pip-lxml-error-command-gcc-failed-with-exit-status-1.html" rel="alternate"></link><updated>2011-11-01T14:31:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-11-01:posts/trying-to-install-scrapy-with-pip-lxml-error-command-gcc-failed-with-exit-status-1.html</id><summary type="html">&lt;p&gt;Just tried to install scrapy with pip / easy_install, but when it comes
to installing lxml it will give the following error:&lt;/p&gt;
&lt;p&gt;gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2
-Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c
src/lxml/lxml.etree.c -o
build/temp.linux-x86_64-2.7/src/lxml/lxml.etree.o -w&lt;/p&gt;
&lt;p&gt;In file included from src/lxml/lxml.etree.c:239:0:
src/lxml/etree_defs.h:9:31: fatal error: libxml/xmlversion.h: No such
file or directory
compilation terminated.&lt;/p&gt;
&lt;p&gt;error: command 'gcc' failed with exit status 1  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;&lt;br /&gt;
Install Python development package:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-dev
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Install the development packages of libxml and libst  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install libxml2-dev  
sudo apt-get install libxslt1-dev&lt;span class="o"&gt;[&lt;/span&gt;/sourcecode&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</summary><category term="python"></category><category term="linux"></category><category term="ubuntu"></category></entry><entry><title>Ubuntu 11.10 error while loading shared libraries: libssl.so.0.9.8: cannot open shared object file: No such file or directory</title><link href="http://samos-it.com/posts/ubuntu-11-10-error-while-loading-shared-libraries-libssl-so-0-9-8-cannot-open-shared-object-file-no-such-file-or-directory.html" rel="alternate"></link><updated>2011-10-29T06:15:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-10-29:posts/ubuntu-11-10-error-while-loading-shared-libraries-libssl-so-0-9-8-cannot-open-shared-object-file-no-such-file-or-directory.html</id><summary type="html">&lt;p&gt;A quick solution is to install the libssl 0.9.8 package with the
&lt;strong&gt;Following command&lt;/strong&gt;:&lt;br /&gt;
&lt;code&gt;sudo apt-get install libssl0.9.8&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Thanks to Rob who commented below and provided an answer on
&lt;a href="http://stackoverflow.com/questions/7937225/django-runserver-error-while-loading-shared-libraries-libssl-so-0-9-8-cannot-o"&gt;Stackoverflow&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I just upgraded from ubuntu 11.04 to 11.10 with a fresh install, by
keeping my old home folder so not loosing my personal data, but only
formatting the whole system partition. After reinstalling my most
important development software I still couldn't run django's server. I
kept getting the followering error:&lt;br /&gt;
error while loading shared libraries: libssl.so.0.9.8:
cannot open shared object file: No such file or directory  &lt;/p&gt;
&lt;p&gt;You will also get this error:&lt;br /&gt;
python: error while loading shared libraries:
libcrypto.so.0.9.8: cannot open shared object file: No such file or
directory&lt;/p&gt;
&lt;p&gt;It seems this problem was because the virtualenv was still using the
previous python libraries, which linked to a no longer there ssl
package, what I did was create a new virtualenv and problem was solved.
Anybody know a better way? Is there a way to update virtualenv to a new
python version?&lt;/p&gt;
&lt;p&gt;Update: Seems it's just the upgrade process is too buggy normally.
I really enjoy Archlinux and recommend it to anybody who hates these
kind of issues.&lt;/p&gt;</summary></entry><entry><title>Samwich: Sam's tasty sandwiches</title><link href="http://samos-it.com/posts/samwich-sams-tasty-sandwiches.html" rel="alternate"></link><updated>2011-09-12T15:35:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-09-12:posts/samwich-sams-tasty-sandwiches.html</id><summary type="html">&lt;p&gt;I went to sell sandwiches on the streets of Beijing. Why you
think? Just for fun and experience. I often buy food on the streets here
myself, stuff like sushi, pancakes, noodles etc and I really like it.
It's quick fun and tasty. So I also wanted to do that.&lt;/p&gt;
&lt;p&gt;Link to foto
album: &lt;a href="https://picasaweb.google.com/118136053313378320646/Beijing2011"&gt;https://picasaweb.google.com/118136053313378320646/Beijing2011&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Today I first went to Weiduomei 味多美 to buy some Baguettes(stokbrood),
that french long crispy bread, we bought 2 for 12元 \~1,20 euro. After
that we went to the supermarket to buy tuna fish(12元 \~1,40 euro) in
can and olive oil and a plate to put the sandwiches on. After coming
back at the appartment I still needed to buy tomatoes and vegetable,
which we bought for 4 yuan \~ 0,40 euro. So in total all the ingredients
costed 30元 \~3 euro.&lt;/p&gt;
&lt;p&gt;When we got all the ingredients around 7 o'clock I started making the
sandwiches with tuna, tomato, salad and olive oil, with tomato ketchup.
At 8 o'clock we started selling, in the beginning I felt weird all the
people had to laugh also at me when they saw a foreigner selling stuff
on the street, many people looked at the paper Lindan wrote:Tuna
sandwich Big ones 10元, small ones 5元. The first 10 minutes many people
looked but nobody buyed, although I was screaming Jing Chang Yu San Ming
zi,  Da de 10 kuai, Xiao de 5 kuai, still people didn't want to buy it.
Some people told me they are full and just ate hehe. But after some time
our first customer bought a small one it were 2 girls. After that it
went pretty quick within 1 hour we sold nearly all and though it is
enough, now we want to eat what's left ourself haha.&lt;/p&gt;
&lt;p&gt;In the end we earned 35元, but the costs of all the sandwiches were
30元. We ate 2 sandwiches ourself, so we ate free sandwiches today and
still made 5 yuan and lots of fun. Not bad! Gonna do this again next
time, but then a little bigger.&lt;/p&gt;</summary></entry><entry><title>The Beijing Bike Tour and China Belly Problems</title><link href="http://samos-it.com/posts/the-beijing-bike-tour-and-china-belly-problems.html" rel="alternate"></link><updated>2011-08-20T14:23:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-08-20:posts/the-beijing-bike-tour-and-china-belly-problems.html</id><summary type="html">&lt;p&gt;New
pics are added to the same
album: &lt;a href="https://picasaweb.google.com/118136053313378320646/Beijing2011WithBart#"&gt;https://picasaweb.google.com/118136053313378320646/Beijing2011WithBart#&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The day before yesterday went on bike tour to some famous lakes in
Beijing (Beihai, Houhai, Qianhai, Xihai) and some temple which was
closed already :( We biked the following path I created the route on
Google Maps for people, who want to try it also: &lt;a href="http://maps.google.com/maps/ms?authuser=0&amp;amp;ie=UTF8&amp;amp;hl=en&amp;amp;oe=UTF8&amp;amp;msa=0&amp;amp;msid=212889837162657669218.0004aaeb65bce60c1bf49" title="The Route on Google Maps"&gt;The Route on Google
Maps&lt;/a&gt;.  &lt;/p&gt;
&lt;iframe width="425" height="350" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" src="http://maps.google.com/maps/ms?hl=en&amp;amp;ie=UTF8&amp;amp;oe=UTF8&amp;amp;msa=0&amp;amp;msid=212889837162657669218.0004aaeb65bce60c1bf49&amp;amp;vpsrc=6&amp;amp;ll=39.962912,116.367874&amp;amp;spn=0.0921,0.145912&amp;amp;z=12&amp;amp;output=embed"&gt;&lt;/iframe&gt;

&lt;p&gt;View &lt;a href="http://maps.google.com/maps/ms?hl=en&amp;amp;ie=UTF8&amp;amp;oe=UTF8&amp;amp;msa=0&amp;amp;msid=212889837162657669218.0004aaeb65bce60c1bf49&amp;amp;vpsrc=6&amp;amp;ll=39.962912,116.367874&amp;amp;spn=0.0921,0.145912&amp;amp;z=12&amp;amp;source=embed"&gt;Beijing Bike Tour Wudaokou -&gt;
Beihai&lt;/a&gt;
in a larger map&lt;/p&gt;
&lt;p&gt;The bike tour itself was also already pretty good, we didn't use the
normal roads but tried to go through the neighborhoods around here. That
was pretty fun, the neighborhood we went through seemed a little poor
many dirt on the street and many people selling vegetables, also saw a
store selling chickens, which were still alive. Actually we were
planning to start at Xihai and go down to Beihai, but because we went
much faster than expected we ended up at Beihai and went up again to
Xihai.&lt;/p&gt;
&lt;p&gt;After arriving at Beihai we decided to go in and pay the small entrance
fee, which I really hate. Don't wanna pay for some touristic attraction.
It will make me feel too much like a tourist. Inside the park it looked
pretty good, we went with a small boat to the other side of the lake. On
the boat I talked with some Chinese kids and his father was using his
iPad to make pictures and videos. We were also on some of those pics :P&lt;/p&gt;
&lt;p&gt;Yesterday we went to the Olympic park, a park which they built just for
relaxing and beauty. At the entrance of the park there is a big lake
with many golden carps, which you can feed and touch if you are quick
enough :P We also fed them some Chinese white bread. After it became
dark, we went fishing nearby the Olympic park, but didn't catch any :(
Last time I went fishing there with Lindan, we catched 2 gold fishes.&lt;/p&gt;
&lt;p&gt;Today we planned to go to the great wall, but Bart was a little sick
because we traveled too much. Not serious luckily, just little
uncomfortable in the belly. The standard stuff you get in China. But I'm
there no need to worry, already bought some western food like bread and
jam and water. He is already feeling much better. But having a good
relax also wasn't that bad for myself also :P&lt;/p&gt;
&lt;p&gt;Tomorrow we will even go out to travel again if Bart is totally
recovered. We will go to Summer Palace (Yi he yuan) and another famous
park nearby called Yuan ming yuan.&lt;/p&gt;</summary></entry><entry><title>The Watercube and it's big waterpark</title><link href="http://samos-it.com/posts/the-watercube-and-its-big-waterpark.html" rel="alternate"></link><updated>2011-08-18T04:53:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-08-18:posts/the-watercube-and-its-big-waterpark.html</id><summary type="html">&lt;p&gt;The day before yesterday we went to a big waterpark inside the Watercube
in the Olympic Park. We watched some pictures and thought it was really
big, but when we came there we noticed it wasn't as big as we thought :P
Pictures not only lie with girls, but also with waterparks.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.samos-it.com/wp-content/uploads/2011/08/aqualoop.jpg"&gt;&lt;img alt="Aqualoop in Beijing
Waterpark" src="http://blog.samos-it.com/wp-content/uploads/2011/08/aqualoop.jpg" title="Aqualoop in Beijing Waterpark" /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It was still pretty good though, there were 3 pretty high, fast and
scary slides and the others were more for kids. There was also the most
crazy slide I ever saw. When we saw it outside we already thought wow
this is really fast and steep. They first shoot you fast down and then
with the speed you gain you will go up again, nearly like a
rollercoaster with a loop inside. But that wasn't all when we went
upstairs to see the entrance of the slide it got even more crazy. There
was a machine which looked like coffin or capsule, which the guy there
will open for you and asks you to go in. Then they close the coffin and
a womans voice says 3-2-1 and the floor under your feet goes away and
you fall down in the slide.&lt;/p&gt;
&lt;p&gt;So who would want to take such a slide? Well not so many, also nearly no
people toke it so I certainly didn't want to risk my life :P But Bart
really wanted to take it and insisted that he would only take it if I
took it. So I first interviewed a girl who took the slide and asked her
if she felt like she had to puke or got hurt or felt dizzy and such.
After the interview was positive I agreed to go with Bart and risk my
life haha. I was pretty nervous when the woman said 3-2-1 but when I got
out I felt it wasn't that scary. Although I got hurt a little, I have a
small wound on my leg now because it went too fast and my leg got burned
or something I guess. This is the slide in
question: &lt;a href="http://waterpark.water-cube.com/english/Attractions_AquaLoop.aspx"&gt;http://waterpark.water-cube.com/english/Attractions_AquaLoop.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After all it was pretty fun, I also never knew there was a waterpark
inside the Watercube. But thanks to Bart and his mother, who actually
knew there was a waterpark, we went there :) Bart treated us, pretty
good :D Today we will go on a bike trip through whole Beijing. Tomorrow
probably more about that :)&lt;/p&gt;</summary></entry><entry><title>Bart and his lost Bike</title><link href="http://samos-it.com/posts/bart-and-his-lost-bike.html" rel="alternate"></link><updated>2011-08-11T15:00:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-08-11:posts/bart-and-his-lost-bike.html</id><summary type="html">&lt;p&gt;Yesterday Bart went on a trip to Tianmen Square, but after coming back I got
a call that his bike got lost. So my first thought was must be stolen,
but then he said he put it in front of the police post. So I gave it
another thought and maybe thought it can still be found if we have look.
So Lindan and me went to Wudaokou to check, where we found there are no
bikes so maybe the bike shouldn't be put there.&lt;/p&gt;
&lt;p&gt;A few moments later Lindan found a sign saying in Chinese characters
"You can't put your bike here, you should be responsible for your own
acting(禁止停放自行车，后果自负。" Which Bart couldn't understand of
course. So Lindan first asked some cleaner or traffic guy, where they
would put the bikes, but he didn't know. Then we asked at the police
station and they said the put it at a nearby bike parking place. At the
bike parking place it was just a matter of finding the bike and paying 2
eurocent, which is the normal price for 1 day parking. So it all ended well.
I will also study reading and writing Chinese
characters more, seems it's quite useful here.&lt;/p&gt;</summary></entry><entry><title>A New Start in Beijing</title><link href="http://samos-it.com/posts/a-new-start-in-beijing.html" rel="alternate"></link><updated>2011-08-11T07:07:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-08-11:posts/a-new-start-in-beijing.html</id><summary type="html">&lt;p&gt;Pics: &lt;a href="https://picasaweb.google.com/118136053313378320646/Beijing2011WithBart"&gt;https://picasaweb.google.com/118136053313378320646/Beijing2011WithBart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;After a tough trip, waiting in moscow for 8,5 hours we finally arrived
in Beijing. On the way to the hotel Bart found the traffic here a little rough
and dangerous, but actually I found the driver today was driving quite peacefully already haha.
Guess I got used to the kamikaze drivers, which cross the roads
the way depending on luck whether they live or die. After arriving at
the hotel we were greeted with a friendly NiHao(ni hau).&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="http://hjinnswks.becod.com/upfile/200911/24/70519_1259042826KKjE.jpg" title="Hotel" /&gt;&lt;/p&gt;
&lt;p&gt;This was the hotel we lived in for 168Yuan/night (17 euro). We also
helped Bart to rent a kid's bike for 6 euro for this month. The bike
here is pretty handy. We went to bike for half an hour and arrived at
the mountain.
It was my third time already to go to the mountain. The first time was with
Lindan on the bike and 2nd time I went with my old classmates. It's my
favorite mountain. Here are some
pics: &lt;a href="https://picasaweb.google.com/118136053313378320646/Beijing2011WithBart"&gt;https://picasaweb.google.com/118136053313378320646/Beijing2011WithBart&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We also went to the olympic park, which you can see on the pics. Also
been there for several times already but I still like it there, always
nice and cosy, people dancing, singing and chilling. Next time we will
go there in the daytime so we can feed the koi carps there.&lt;/p&gt;
&lt;p&gt;Although we did a lot of fun things, we also had to find
an apartment because we will be staying here for 1 year. Yea it's
definite now. We need to pay the rent for 1 year, because the landlord
lives far away and this was how they wanted things done. I first thought
maybe it's a cheater, but we already registered at the police so he isn't
a cheater. But need to get enough money before the end of the month. He
first even said if you dont have enough now we can't rent it out.. So we
arranged we can pay the remaining money at the end of the month. I will
have to work hard this year I think :P The apartment is really good
though, nice living room and good furniture big bed, everything I need.&lt;/p&gt;
&lt;p&gt;Tonight will go to the outside swimming pool again. Lindan's swimming
skills improved a lot, but still needs practice so she won't die when
she falls in the sea. Thanks to Bart's mother we also know we can go to
something much better than Tikibad in the watercube(in Olympic Park). We
are planning to go there somewhere soon.&lt;/p&gt;</summary></entry><entry><title>How to install Setuptools to a specific python version</title><link href="http://samos-it.com/posts/how-to-install-setuptools-to-a-specific-python-version.html" rel="alternate"></link><updated>2011-07-18T19:34:00+02:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-07-18:posts/how-to-install-setuptools-to-a-specific-python-version.html</id><summary type="html">&lt;p&gt;To install easy_install for a specific python version. I just installed
from source and used the python version you want to install setuptools
too. I used the following steps in Ubuntu 11.04 with Python 2.5 and
Python 2.7 installed. The following commands will install setuptools to
python 2.5  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget
http://pypi.python.org/packages/source/s/setuptools/setuptools-0.6c11.tar.gz#md5&lt;span class="o"&gt;=&lt;/span&gt;7df2a529a074f613b509fb44feefe74e  
tar -zxvf setuptools-0.6c11.tar.gz &lt;span class="nb"&gt;cd &lt;/span&gt;setuptools-0.6c11/  
sudo python2.5 setup.py install
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The following command installs the pil module to 2.5: &lt;br /&gt;
&lt;code&gt;sudo easy_install-2.5 pil&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This command installs the pil module to 2.7: &lt;br /&gt;
&lt;code&gt;sudo easy\_install-2.7 pil&lt;/code&gt;&lt;/p&gt;</summary><category term="python"></category><category term="ubuntu"></category><category term="linux"></category></entry><entry><title>Sam the terrorist arrived in China</title><link href="http://samos-it.com/posts/sam-the-terrorist-arrived-in-china.html" rel="alternate"></link><updated>2011-02-13T00:08:00+01:00</updated><author><name>Sam Stoelinga</name></author><id>tag:samos-it.com,2011-02-13:posts/sam-the-terrorist-arrived-in-china.html</id><summary type="html">&lt;p&gt;It has been some days I guess since I have been away from Hollad. But it has been kind of hectic. I will start
from the trip till today. &lt;/p&gt;
&lt;p&gt;The trip started early at 6:30, train to Schiphol and than flight to
London, wait in London for 5 hours. So I was waiting and got little
bored and decided to walk around for a bit and sit at some other places,
and watch some episodes on my laptop. Than when I saw I could check in
for my flight to Beijing I noticed I forgot my jacket somewhere, so I
went to look for it at the places I went before. Because this jacket is
my 4-5 year old favorite jacket :D&lt;/p&gt;
&lt;p&gt;Then I found it after 10 minutes of searching and thought ah great just
get it. Than I noticed there were more securtiy than normally around me.
I thought hmm just walk away and at that moment one of them talked to
me, asking me if it was my jacket. What is in your pocket? Why did you
leave your jacket? What is the flashing light in the jacket? (My bike
light, but forgot i took that with me haha)What is your destination?
What is your intention? What will you do in beijing? And he kept
complaining it was really not good to leave something... he asked me
more questions but can't remember all of them.&lt;/p&gt;
&lt;p&gt;After a little trouble I arrived in Beijing, took some subway to get to
the hotel and meet Marry again :D was really good. We stayed in a hotel
for 2 days while searching for appartments. Some of the appartments were
so bad haha, with toilets which looked like they weren't cleaned for
weeks, but we finally found one for a decent price. A 2 bedroom
appartement with a living room, and kitchen for 400 euro a month. House
prices are quite high here in Beijing compared to Xiamen. To buy a house
also costs like 200.000 euro or more for 60-80m2.&lt;/p&gt;
&lt;p&gt;There has also been some snow really fun, because it was Marrys first
time to see snow in her whole life. Had some lil snowfights etc hehe :D
Too bad didn't make pictures yet, will try to make more. We got a camera
just forget to take it...&lt;/p&gt;
&lt;p&gt;Edit: Made some pics of the appartment, you can see them
here: &lt;a href="https://picasaweb.google.com/sammiestoel/BeijingInternship2011Appartment#"&gt;https://picasaweb.google.com/sammiestoel/BeijingInternship2011Appartment#&lt;/a&gt;&lt;/p&gt;</summary><category term="china"></category></entry></feed>